CREATE TABLE clothing (id INTEGER PRIMARY KEY, item_type TEXT, quantity INTEGER, price INTEGER, size TEXT);

INSERT INTO clothing VALUES (1, "Dress", 10, 54.00, "L");
INSERT INTO clothing VALUES (2, "Skirt", 5, 64.00, "L");
INSERT INTO clothing VALUES (3, "Shorts", 50, 4.00, "L");
INSERT INTO clothing VALUES (4, "Pants", 6, 104.00, "L");
INSERT INTO clothing VALUES (5, "Jeans", 60, 298.00, "L");
INSERT INTO clothing VALUES (6, "Leggings", 7, 33.00, "L");
INSERT INTO clothing VALUES (7, "Socks", 77, 5.00, "L");
INSERT INTO clothing VALUES (8, "Underware", 8, 4.99, "L");
INSERT INTO clothing VALUES (9, "Bras", 80, 75.00, "L");
INSERT INTO clothing VALUES (10, "Bathing Suit", 200, 54.00, "L");
INSERT INTO clothing VALUES (11, "Bikini", 100, 150.00, "L");
INSERT INTO clothing VALUES (12, "Shoes", 1000, 500.00, "L");
INSERT INTO clothing VALUES (13, "Scarf", 66, 99.00, "L");
INSERT INTO clothing VALUES (14, "Shirt", 88, 54.00, "L");
INSERT INTO clothing VALUES (15, "Tank Top", 99, 54.00, "L");

Retrieve All Items Ordered by Price
SELECT * FROM clothing 
ORDER BY price;
SELECT SUM(quantity) FROM clothing;
SELECT * FROM clothing;

Retrieve All Items with Quantity Greater Than 50:
SELECT * 
FROM clothing 
WHERE quantity > 50;

Find the Average Price of All Items
SELECT AVG(price) AS average_price 
FROM clothing;

Get the Total Number of Items in Stock
SELECT SUM(quantity) AS total_items_in_stock 
FROM clothing;

List Items Grouped by Item Type with Their Respective Quantities
SELECT item_type, SUM(quantity) AS total_quantity 
FROM clothing 
GROUP BY item_type;

Retrieve Clothing Priced Above 100
SELECT * 
FROM clothing 
WHERE price > 100.00;

